<?php

namespace app\index\controller;

use classes\YBException;
use classes\YBOpenApi;
use think\App;
use think\facade\Log;
use think\facade\Session;
use think\Request;

class User extends Container
{
    public $uid;

    public function __construct(App $app = null)
    {
        parent::__construct($app);
        $this->model = new \app\index\model\User();
        $this->uid = Session::get("uid");
    }

    public function zone()
    {
        dump(md5("123456"));

        $result = $this->model->where("id", $this->uid)->find();
        if (is_null($result)) return Error::login("用户未登录");
        $this->response($result->getData(), "ok");
    }

    /**
     * web环境下的手动登录
     * @param $username
     * @param $password
     * @param $verifyCode
     */
    public function login($username, $password, $verifyCode)
    {
        $data = $this->model->where(["username" => $username, "password" => $password])->where("yiban_openid is not null")->find();
        if (is_null($data)) return Error::login("账号密码错误");
        Session::set("user_id", $data->getData("id"));
        Session::set("user_data", $data->getData());
        return $this->response([], "ok");
    }

    /**
     *易班环境下的自动登录
     */
    public function autoLoginByYiBan()
    {
        $api = YBOpenApi::getInstance()->init("6c0c36ce97d44aaa", "d8100bc4371d4036fc478acf0e6f4e1a", "http://f.yiban.cn/iapp540992");
        $iapp = $api->getIApp();

        try {
            //轻应用获取access_token，未授权则跳转至授权页面
            $info = $iapp->perform();
        } catch (YBException $ex) {
//            echo $ex->getMessage();
            return Error::login("未获取到授权，请保证在易班内登陆");
        }
        if (!isset($info)) Error::login("未获取到授权，请保证在易班内登陆");
        dump($info);
        $token = $info['visit_oauth']['access_token'];//轻应用获取的token
        $result = $this->model->where("yiban_openid", $info["visit_user"]["userid"])->find();
        $isExist = !empty($result);
        //当用户从未登陆过本系统时，创建新账户
        if (!$isExist) {
            $cl = $this->model;
            $result = $cl::create(["yiban_openid" => $info["visit_user"]["userid"], "username" => $info["visit_user"]["username"]]);
        } else {
            Log::sql($result->getLastSql());
            Session::set("user_id", $result->getData("id"));
            Session::set("user_data", $result->getData());
            Session::set("yiban_token", $token);
            Session::set("yiban_expire", $token);
        }
//        $this->redirect($this->request->domain() . "/m/");
    }

    /**
     *微信环境下的自动登录
     */
    public function autoLoginByWX()
    {

    }

    /**
     * 绑定易班账号
     * @param $openid
     */
    public function registerByYiBan($openid)
    {

    }

    /**
     * 绑定易班账号
     * @param $openid
     */
    public function registerByWX($openid)
    {

    }

    public function update(Request $request, $id)
    {
        //todo overwrite User's 'update' method
        return parent::update($request, $id); // TODO: Change the autogenerated stub
    }

    private function setPwd($uid, $password)
    {
        return $this->model->save(["password" => md5($password)], $uid);
    }

    public function changePwd($oldPassword, $newPassword, $verifyCode)
    {
        $data = $this->model->where(["password" => md5($oldPassword), "uid" => $this->uid])->find();
        if (is_null($data)) return Error::login("原密码错误");
        $result = $this->setPwd($this->uid, $newPassword);
        return $this->response($result, "ok");
    }

    public function setEmail($email)
    {
        $result = $this->model->save(["email" => $email], ["id" => $this->uid]);
        return $this->response($result, "ok");
    }

    public function setUsername($username)
    {
        $result = $this->model->save(["username" => $username], ['id' => $this->uid]);
        return $this->response($result, "ok");
    }
}
